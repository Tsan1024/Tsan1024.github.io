<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tsan Blog</title>
    <link>https://tsan1024.github.io/</link>
    <description>Recent content on Tsan Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Oct 2024 23:22:27 +0800</lastBuildDate>
    <atom:link href="https://tsan1024.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>An Example Post</title>
      <link>https://tsan1024.github.io/post/ai/test/</link>
      <pubDate>Mon, 28 Oct 2024 23:22:27 +0800</pubDate>
      <guid>https://tsan1024.github.io/post/ai/test/</guid>
      <description>testing</description>
    </item>
    <item>
      <title>C&#43;&#43;进程间通信</title>
      <link>https://tsan1024.github.io/post/tech/c&#43;&#43;%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Thu, 30 May 2024 16:38:45 +0800</pubDate>
      <guid>https://tsan1024.github.io/post/tech/c&#43;&#43;%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/</guid>
      <description>分类 管道（Pipes） 命名管道（Named Pipes）：适用于无关进程之间的通信。命名管道有一个名称，可以在文件系统中进行标识。 无名管道（U</description>
    </item>
    <item>
      <title>C&#43;&#43;强制类型转换</title>
      <link>https://tsan1024.github.io/post/tech/c&#43;&#43;%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Thu, 23 May 2024 09:38:45 +0800</pubDate>
      <guid>https://tsan1024.github.io/post/tech/c&#43;&#43;%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid>
      <description>c/c++类型转换种分为两种：隐式类型转换（编译器）、显示类型转换（强制类型转换） c 类型转换 c语言的类型转换主要有两种： (new-type) expression new-type (expression) 局限性 转换随</description>
    </item>
    <item>
      <title>分布式</title>
      <link>https://tsan1024.github.io/post/tech/%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Fri, 10 May 2024 16:38:45 +0800</pubDate>
      <guid>https://tsan1024.github.io/post/tech/%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF/</guid>
      <description>分布式系统设计与开发、负载均衡技术，系统容灾设计，高可用系统等知识 https://cloud.tencent.com/developer/article/1419513</description>
    </item>
    <item>
      <title>文件描述符</title>
      <link>https://tsan1024.github.io/post/tech/%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6/</link>
      <pubDate>Thu, 09 May 2024 14:53:59 +0800</pubDate>
      <guid>https://tsan1024.github.io/post/tech/%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6/</guid>
      <description>https://blog.csdn.net/cywosp/article/details/38965239 https://www.cnblogs.com/cscshi/p/15705033.html https://linuxmeerkat.wordpress.com/2011/12/02/file-descriptors-explained/ https://zhuanlan.zhihu.com/p/143430585 https://xiehongfeng100.github.io/2018/09/08/net-read-and-write/</description>
    </item>
    <item>
      <title>常见的c&#43;&#43;性能调优工具</title>
      <link>https://tsan1024.github.io/post/tech/c&#43;&#43;-tools/</link>
      <pubDate>Wed, 08 May 2024 14:53:59 +0800</pubDate>
      <guid>https://tsan1024.github.io/post/tech/c&#43;&#43;-tools/</guid>
      <description>valgrind perf gporf 1 perf Perf是内置于Linux内核源码树中的性能剖析工具。以性能事件为基础，常用于性能瓶颈的查找与热点代码的定位。 1.1 使用 常见有两种使用</description>
    </item>
    <item>
      <title>C&#43;&#43;并发编程总结</title>
      <link>https://tsan1024.github.io/post/tech/c&#43;&#43;/</link>
      <pubDate>Tue, 07 May 2024 16:38:45 +0800</pubDate>
      <guid>https://tsan1024.github.io/post/tech/c&#43;&#43;/</guid>
      <description>多线程操作,</description>
    </item>
    <item>
      <title>设计模式</title>
      <link>https://tsan1024.github.io/post/tech/design-pattern/</link>
      <pubDate>Wed, 27 Dec 2023 23:40:25 +0800</pubDate>
      <guid>https://tsan1024.github.io/post/tech/design-pattern/</guid>
      <description>引言 创见型模式 工厂方法模式 抽象工厂模式 生成器模式 原型模式 单例模式 结构型模式 适配器模式 桥接模式 组合模式 装饰模式 外观模式 享元模式 代理模式 行为模式</description>
    </item>
    <item>
      <title>golang 单元测试</title>
      <link>https://tsan1024.github.io/post/tech/go%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Tue, 26 Dec 2023 23:17:45 +0800</pubDate>
      <guid>https://tsan1024.github.io/post/tech/go%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/</guid>
      <description>go Test 单元测试编写 Go 语言的单元测试默认采用官方自带的测试框架，通过引入 testing 包以及 执行 go test 命令来实现单元测试功能。 Go 单元测试的基本规范如下： 测试函</description>
    </item>
    <item>
      <title>编程规范</title>
      <link>https://tsan1024.github.io/post/tech/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</link>
      <pubDate>Fri, 08 Dec 2023 23:01:12 +0800</pubDate>
      <guid>https://tsan1024.github.io/post/tech/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</guid>
      <description>c++编程规范： https://zh-google-styleguide.readthedocs.io/en/latest/contents/</description>
    </item>
    <item>
      <title>ROS架构与通信</title>
      <link>https://tsan1024.github.io/post/robots/ros%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Sun, 03 Dec 2023 21:02:15 +0800</pubDate>
      <guid>https://tsan1024.github.io/post/robots/ros%E9%80%9A%E4%BF%A1/</guid>
      <description>ROS2通信模型 话题 服务 参数 动作 参考链接 入门教程：https://book.guyuehome.com/ ROS 和 ROS2 架构和通信 https://codeantenna.com/a/909CWGyaSo#5_ROS_2__131</description>
    </item>
    <item>
      <title>机器人导学教学视频</title>
      <link>https://tsan1024.github.io/post/robots/%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AD%A6%E5%85%A5%E9%97%A8%E8%A7%86%E9%A2%91/</link>
      <pubDate>Tue, 28 Nov 2023 23:42:23 +0800</pubDate>
      <guid>https://tsan1024.github.io/post/robots/%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AD%A6%E5%85%A5%E9%97%A8%E8%A7%86%E9%A2%91/</guid>
      <description>机器人学导论 &lt;!DOCTYPE HTML&gt; 参考链接： Hugo 通过 ShortCodes 添加视频</description>
    </item>
    <item>
      <title>k8s学习笔记（1）</title>
      <link>https://tsan1024.github.io/post/tech/2023-11-25-k8s/</link>
      <pubDate>Sat, 25 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://tsan1024.github.io/post/tech/2023-11-25-k8s/</guid>
      <description>k8s 架构 MasterNode包含3个程序，分别是： ApiServer： 提供HTTP Rest接口，是集群中各种核心资源的CRUD的统一入口，是集</description>
    </item>
    <item>
      <title>robots 入门</title>
      <link>https://tsan1024.github.io/post/robots/%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%85%A5%E9%97%A8/</link>
      <pubDate>Wed, 22 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://tsan1024.github.io/post/robots/%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%85%A5%E9%97%A8/</guid>
      <description>robots ros教学 https://fishros.com/d2lros2/#/ ros1与ros2对比 参考资料 https://getiot.tech/zh/ros2/ros2-installation-on-ubuntu https://docs.elephantrobotics.com/docs/gitbook/8-ApplicationBaseCPlus/8.4-coord.html</description>
    </item>
    <item>
      <title></title>
      <link>https://tsan1024.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tsan1024.github.io/about/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>https://tsan1024.github.io/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tsan1024.github.io/notes/</guid>
      <description> </description>
    </item>
    <item>
      <title></title>
      <link>https://tsan1024.github.io/search/placeholder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tsan1024.github.io/search/placeholder/</guid>
      <description></description>
    </item>
    <item>
      <title>Posts Archive</title>
      <link>https://tsan1024.github.io/archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tsan1024.github.io/archive/</guid>
      <description></description>
    </item>
    <item>
      <title>Search Results</title>
      <link>https://tsan1024.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tsan1024.github.io/search/</guid>
      <description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [&amp;ldquo;HTML&amp;rdquo;, &amp;ldquo;JSON&amp;rdquo;] ```</description>
    </item>
  </channel>
</rss>
